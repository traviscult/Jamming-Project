{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","util/Spotify.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","search","bind","assertThisInitialized","handleTermChange","onSearch","e","setState","target","value","react_default","a","createElement","className","placeholder","onChange","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","Components_Track_Track","key","id","SearchResults","Components_TrackList_TrackList","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","require","config","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","concat","process","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","playlistName","updatePlaylistName","find","savedTrack","push","filter","currentTrack","_this2","_this3","Components_SearchBar_SearchBar","Components_SearchResults_SearchResults","Components_Playlist_Playlist","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Components_App_App"],"mappings":"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","file":"static/js/main.eb259755.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \" \",\n    };\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n  handleTermChange(e) {\n    this.setState({ term: e.target.value });\n  }\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input\n          placeholder=\"Enter A Song, Album, or Artist\"\n          onChange={this.handleTermChange}\n        />\n        <button className=\"SearchButton\" onClick={this.search}>\n          SEARCH\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./Track.css\";\n\nclass Track extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n  renderAction() {\n    if (this.props.isRemoval) {\n      return (\n        <button className=\"Track-action\" onClick={this.removeTrack}>\n          -\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"Track-action\" onClick={this.addTrack}>\n          +\n        </button>\n      );\n    }\n  }\n  addTrack() {\n    this.props.onAdd(this.props.track);\n  }\n  removeTrack() {\n    this.props.onRemove(this.props.track);\n  }\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>\n            {this.props.track.artist} | {this.props.track.album}\n          </p>\n        </div>\n        {this.renderAction()}\n      </div>\n    );\n  }\n}\nexport default Track;\n","import React from \"react\";\nimport \"./TrackList.css\";\nimport Track from \"../Track/Track\";\n\nclass TrackList extends React.Component {\n  render() {\n    return (\n      <div className=\"TrackList\">\n        {this.props.tracks.map((track) => {\n          return (\n            <Track\n              track={track}\n              key={track.id}\n              onAdd={this.props.onAdd}\n              onRemove={this.props.onRemove}\n              isRemoval={this.props.isRemoval}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\nexport default TrackList;\n","import React from \"react\";\nimport \"./SearchResults.css\";\nimport TrackList from \"../TrackList/TrackList\";\n\nclass SearchResults extends React.Component {\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList\n          tracks={this.props.SearchResults}\n          onAdd={this.props.onAdd}\n          isRemoval={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React from \"react\";\nimport \"./Playlist.css\";\nimport TrackList from \"../TrackList/TrackList\";\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n  handleNameChange(e) {\n    this.props.onNameChange(e.target.value);\n  }\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input defaultValue={\"New Playlist\"} onChange={this.handleNameChange} />\n        <TrackList\n          tracks={this.props.playlistTracks}\n          onRemove={this.props.onRemove}\n          isRemoval={true}\n        />\n        <button className=\"Playlist-save\" onClick={this.props.onSave}>\n          SAVE TO SPOTIFY\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Playlist;\n","require(\"dotenv\").config();\nconst clientId = process.env.REACT_APP_API_Key;\n\nconst redirectUri = \"http://react-playlist.surge.sh\";\nlet accessToken;\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n      window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n      window.history.pushState(\"Access Token\", null, \"/\");\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        if (!jsonResponse.tracks) {\n          return [];\n        }\n        return jsonResponse.tracks.items.map((track) => ({\n          id: track.id,\n          name: track.name,\n          artist: track.artists[0].name,\n          album: track.album.name,\n          uri: track.uri,\n        }));\n      });\n  },\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n    const accessToken = Spotify.getAccessToken();\n    const headers = { Authorization: `Bearer ${accessToken}` };\n    let userId;\n\n    return fetch(\"https://api.spotify.com/v1/me\", { headers: headers })\n      .then((response) => response.json())\n      .then((jsonResponse) => {\n        userId = jsonResponse.id;\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n          headers: headers,\n          method: \"POST\",\n          body: JSON.stringify({ name: name }),\n        })\n          .then((response) => response.json())\n          .then((jsonResponse) => {\n            const playlistId = jsonResponse.id;\n\n            return fetch(\n              `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\n              {\n                headers: headers,\n                method: \"POST\",\n                body: JSON.stringify({ uris: trackUris }),\n              }\n            );\n          });\n      });\n  },\n};\n\nexport default Spotify;\n","import React from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport Spotify from \"../../util/Spotify\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      SearchResults: [],\n      playlistName: \"My Playlist\",\n      playlistTracks: [],\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\n      return;\n    }\n    tracks.push(track);\n    this.setState({ playlistTracks: tracks });\n  }\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter((currentTrack) => currentTrack.id !== track.id);\n    this.setState({ playlistTracks: tracks });\n  }\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n  savePlaylist() {\n    let trackUris = this.state.playlistTracks.map((track) => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: \"New Playlist\",\n        playlistTracks: [],\n      });\n    });\n  }\n  search(term) {\n    Spotify.search(term).then((SearchResults) => {\n      this.setState({ SearchResults: SearchResults });\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults\n              SearchResults={this.state.SearchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}